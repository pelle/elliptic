{"version":3,"file":"elliptic.esm.js","sources":["../src/elliptic/utils.js","../src/elliptic/ec/key.js","../src/elliptic/ec/signature.js","../src/elliptic/precomputed/secp256k1.js","../src/elliptic/curve/base.js","../src/elliptic/curve/short.js","../src/elliptic/curves.js","../src/elliptic/ec/index.js"],"sourcesContent":["import BN from 'bn.js'\nimport minAssert from 'minimalistic-assert'\nimport minUtils from 'minimalistic-crypto-utils'\n\nexport const assert = minAssert\nexport const toArray = minUtils.toArray\nexport const zero2 = minUtils.zero2\nexport const toHex = minUtils.toHex\nexport const encode = minUtils.encode\n\n// Represent num in a w-NAF form\nexport function getNAF (num, w) {\n  var naf = []\n  var ws = 1 << (w + 1)\n  var k = num.clone()\n  while (k.cmpn(1) >= 0) {\n    var z\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1)\n      if (mod > (ws >> 1) - 1)\n        {z = (ws >> 1) - mod;}\n      else\n        {z = mod;}\n      k.isubn(z)\n    } else {\n      z = 0\n    }\n    naf.push(z)\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1\n    for (var i = 1; i < shift; i++)\n      {naf.push(0);}\n    k.iushrn(shift)\n  }\n\n  return naf\n}\n\n// Represent k1, k2 in a Joint Sparse Form\nexport function getJSF (k1, k2) {\n  var jsf = [\n    [],\n    []\n  ]\n\n  k1 = k1.clone()\n  k2 = k2.clone()\n  var d1 = 0\n  var d2 = 0\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3\n    var m24 = (k2.andln(3) + d2) & 3\n    if (m14 === 3)\n      {m14 = -1;}\n    if (m24 === 3)\n      {m24 = -1;}\n    var u1\n    if ((m14 & 1) === 0) {\n      u1 = 0\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        {u1 = -m14;}\n      else\n        {u1 = m14;}\n    }\n    jsf[0].push(u1)\n\n    var u2\n    if ((m24 & 1) === 0) {\n      u2 = 0\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        {u2 = -m24;}\n      else\n        {u2 = m24;}\n    }\n    jsf[1].push(u2)\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      {d1 = 1 - d1;}\n    if (2 * d2 === u2 + 1)\n      {d2 = 1 - d2;}\n    k1.iushrn(1)\n    k2.iushrn(1)\n  }\n\n  return jsf\n}\n\nexport function cachedProperty (obj, name, computer) {\n  var key = '_' + name\n  obj.prototype[name] = function cachedProperty () {\n    return this[key] !== undefined ? this[key]\n           : this[key] = computer.call(this)\n  };\n}\n\nexport function parseBytes (bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex')\n                                     : bytes\n}\n\nexport function intFromLE (bytes) {\n  return new BN(bytes, 'hex', 'le')\n}\n","import BN from 'bn.js'\nimport { assert } from '../utils'\n\nexport default class KeyPair {\n  constructor (ec, options) {\n    this.ec = ec\n    this.priv = null\n    this.pub = null\n\n    // KeyPair(ec, { priv: ..., pub: ... })\n    if (options.priv) this._importPrivate(options.priv, options.privEnc)\n    if (options.pub) this._importPublic(options.pub, options.pubEnc)\n  }\n\n  fromPublic (ec, pub, enc) {\n    if (pub instanceof KeyPair) return pub\n\n    return new KeyPair(ec, {\n      pub: pub,\n      pubEnc: enc\n    })\n  };\n\n  fromPrivate (ec, priv, enc) {\n    if (priv instanceof KeyPair) return priv\n\n    return new KeyPair(ec, {\n      priv: priv,\n      privEnc: enc\n    })\n  };\n\n  validate () {\n    var pub = this.getPublic()\n    if (pub.isInfinity()) {\n      return { result: false, reason: 'Invalid public key' }\n    }\n    if (!pub.validate()) {\n      return { result: false, reason: 'Public key is not a point' }\n    }\n    if (!pub.mul(this.ec.curve.n).isInfinity()) {\n      return { result: false, reason: 'Public key * N != O' }\n    }\n\n    return { result: true, reason: null }\n  };\n\n  getPublic (compact, enc) {\n    // compact is optional argument\n    if (typeof compact === 'string') {\n      enc = compact\n      compact = null\n    }\n\n    if (!this.pub) this.pub = this.ec.g.mul(this.priv)\n\n    if (!enc) return this.pub\n\n    return this.pub.encode(enc, compact)\n  };\n\n  getPrivate (enc) {\n    if (enc === 'hex') {\n      return this.priv.toString(16, 2)\n    } else {\n      return this.priv\n    }\n  };\n\n  _importPrivate (key, enc) {\n    this.priv = new BN(key, enc || 16)\n\n    // Ensure that the priv won't be bigger than n, otherwise we may fail\n    // in fixed multiplication method\n    this.priv = this.priv.umod(this.ec.curve.n)\n  };\n\n  _importPublic (key, enc) {\n    if (key.x || key.y) {\n      // Montgomery points only have an `x` coordinate.\n      // Weierstrass/Edwards points on the other hand have both `x` and\n      // `y` coordinates.\n      if (this.ec.curve.type === 'mont') {\n        assert(key.x, 'Need x coordinate')\n      } else if (this.ec.curve.type === 'short' ||\n                this.ec.curve.type === 'edwards') {\n        assert(key.x && key.y, 'Need both x and y coordinate')\n      }\n      this.pub = this.ec.curve.point(key.x, key.y)\n      return\n    }\n    this.pub = this.ec.curve.decodePoint(key, enc)\n  };\n\n  // ECDH\n  derive (pub) {\n    return pub.mul(this.priv).getX()\n  };\n\n  // ECDSA\n  sign (msg, enc, options) {\n    return this.ec.sign(msg, this, enc, options)\n  };\n\n  verify (msg, signature) {\n    return this.ec.verify(msg, signature, this)\n  };\n\n  inspect () {\n    return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n          ' pub: ' + (this.pub && this.pub.inspect()) + ' >'\n  }\n}\n","import BN from 'bn.js'\nimport { assert, toArray, encode } from '../utils'\n\nexport default class Signature {\n  constructor (options, enc) {\n    if (options instanceof Signature) return options\n\n    if (this._importDER(options, enc)) return\n\n    assert(options.r && options.s, 'Signature without r or s')\n    this.r = new BN(options.r, 16)\n    this.s = new BN(options.s, 16)\n    if (options.recoveryParam === undefined) {\n      this.recoveryParam = null\n    } else {\n      this.recoveryParam = options.recoveryParam\n    }\n  }\n  _importDER (data, enc) {\n    data = toArray(data, enc)\n    var p = new Position()\n    if (data[p.place++] !== 0x30) {\n      return false\n    }\n    var len = getLength(data, p)\n    if ((len + p.place) !== data.length) {\n      return false\n    }\n    if (data[p.place++] !== 0x02) {\n      return false\n    }\n    var rlen = getLength(data, p)\n    var r = data.slice(p.place, rlen + p.place)\n    p.place += rlen\n    if (data[p.place++] !== 0x02) {\n      return false\n    }\n    var slen = getLength(data, p)\n    if (data.length !== slen + p.place) {\n      return false\n    }\n    var s = data.slice(p.place, slen + p.place)\n    if (r[0] === 0 && (r[1] & 0x80)) {\n      r = r.slice(1)\n    }\n    if (s[0] === 0 && (s[1] & 0x80)) {\n      s = s.slice(1)\n    }\n\n    this.r = new BN(r)\n    this.s = new BN(s)\n    this.recoveryParam = null\n\n    return true\n  }\n\n  toDER (enc) {\n    var r = this.r.toArray()\n    var s = this.s.toArray()\n\n    // Pad values\n    if (r[0] & 0x80) { r = [ 0 ].concat(r) }\n    // Pad values\n    if (s[0] & 0x80) { s = [ 0 ].concat(s) }\n\n    r = rmPadding(r)\n    s = rmPadding(s)\n\n    while (!s[0] && !(s[1] & 0x80)) {\n      s = s.slice(1)\n    }\n    var arr = [ 0x02 ]\n    constructLength(arr, r.length)\n    arr = arr.concat(r)\n    arr.push(0x02)\n    constructLength(arr, s.length)\n    var backHalf = arr.concat(s)\n    var res = [ 0x30 ]\n    constructLength(res, backHalf.length)\n    res = res.concat(backHalf)\n    return encode(res, enc)\n  }\n}\n\nclass Position {\n  constructor () {\n    this.place = 0\n  }\n}\n\nfunction getLength (buf, p) {\n  var initial = buf[p.place++]\n  if (!(initial & 0x80)) {\n    return initial\n  }\n  var octetLen = initial & 0xf\n  var val = 0\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8\n    val |= buf[off]\n  }\n  p.place = off\n  return val\n}\n\nfunction rmPadding (buf) {\n  var i = 0\n  var len = buf.length - 1\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++\n  }\n  if (i === 0) {\n    return buf\n  }\n  return buf.slice(i)\n}\n\nfunction constructLength (arr, len) {\n  if (len < 0x80) {\n    arr.push(len)\n    return\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3)\n  arr.push(octets | 0x80)\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff)\n  }\n  arr.push(len)\n}\n","export default {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n","import BN from 'bn.js'\nimport { getNAF, getJSF, assert } from '../utils'\n\nexport default class BaseCurve {\n  constructor(type, conf) {\n    this.type = type;\n    this.p = new BN(conf.p, 16);\n\n    // Use Montgomery, when there is no fast reduction for the prime\n    this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n    // Useful for many curves\n    this.zero = new BN(0).toRed(this.red);\n    this.one = new BN(1).toRed(this.red);\n    this.two = new BN(2).toRed(this.red);\n\n    // Curve configuration, optional\n    this.n = conf.n && new BN(conf.n, 16);\n    this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n    // Temporary arrays\n    this._wnafT1 = new Array(4);\n    this._wnafT2 = new Array(4);\n    this._wnafT3 = new Array(4);\n    this._wnafT4 = new Array(4);\n\n    // Generalized Greg Maxwell's trick\n    var adjustCount = this.n && this.p.div(this.n);\n    if (!adjustCount || adjustCount.cmpn(100) > 0) {\n      this.redN = null;\n    } else {\n      this._maxwellTrick = true;\n      this.redN = this.n.toRed(this.red);\n    }\n  }\n\n  point() {\n    throw new Error('Not implemented');\n  }\n\n  validate() {\n    throw new Error('Not implemented');\n  }\n\n  _fixedNafMul(p, k) {\n    assert(p.precomputed);\n    var doubles = p._getDoubles();\n\n    var naf = getNAF(k, 1);\n    var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n    I /= 3;\n\n    // Translate into more windowed form\n    var repr = [];\n    for (var j = 0; j < naf.length; j += doubles.step) {\n      var nafW = 0;\n      for (var k = j + doubles.step - 1; k >= j; k--)\n        nafW = (nafW << 1) + naf[k];\n      repr.push(nafW);\n    }\n\n    var a = this.jpoint(null, null, null);\n    var b = this.jpoint(null, null, null);\n    for (var i = I; i > 0; i--) {\n      for (var j = 0; j < repr.length; j++) {\n        var nafW = repr[j];\n        if (nafW === i)\n          b = b.mixedAdd(doubles.points[j]);\n        else if (nafW === -i)\n          b = b.mixedAdd(doubles.points[j].neg());\n      }\n      a = a.add(b);\n    }\n    return a.toP();\n  };\n\n  _wnafMul(p, k) {\n    var w = 4;\n\n    // Precompute window\n    var nafPoints = p._getNAFPoints(w);\n    w = nafPoints.wnd;\n    var wnd = nafPoints.points;\n\n    // Get NAF form\n    var naf = getNAF(k, w);\n\n    // Add `this`*(N+1) for every w-NAF index\n    var acc = this.jpoint(null, null, null);\n    for (var i = naf.length - 1; i >= 0; i--) {\n      // Count zeroes\n      for (var k = 0; i >= 0 && naf[i] === 0; i--)\n        k++;\n      if (i >= 0)\n        k++;\n      acc = acc.dblp(k);\n\n      if (i < 0)\n        break;\n      var z = naf[i];\n      assert(z !== 0);\n      if (p.type === 'affine') {\n        // J +- P\n        if (z > 0)\n          acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n        else\n          acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n      } else {\n        // J +- J\n        if (z > 0)\n          acc = acc.add(wnd[(z - 1) >> 1]);\n        else\n          acc = acc.add(wnd[(-z - 1) >> 1].neg());\n      }\n    }\n    return p.type === 'affine' ? acc.toP() : acc;\n  }\n\n  _wnafMulAdd(defW,\n              points,\n              coeffs,\n              len,\n              jacobianResult) {\n    var wndWidth = this._wnafT1;\n    var wnd = this._wnafT2;\n    var naf = this._wnafT3;\n\n    // Fill all arrays\n    var max = 0;\n    for (var i = 0; i < len; i++) {\n      var p = points[i];\n      var nafPoints = p._getNAFPoints(defW);\n      wndWidth[i] = nafPoints.wnd;\n      wnd[i] = nafPoints.points;\n    }\n\n    // Comb small window NAFs\n    for (var i = len - 1; i >= 1; i -= 2) {\n      var a = i - 1;\n      var b = i;\n      if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n        naf[a] = getNAF(coeffs[a], wndWidth[a]);\n        naf[b] = getNAF(coeffs[b], wndWidth[b]);\n        max = Math.max(naf[a].length, max);\n        max = Math.max(naf[b].length, max);\n        continue;\n      }\n\n      var comb = [\n        points[a], /* 1 */\n        null, /* 3 */\n        null, /* 5 */\n        points[b] /* 7 */\n      ];\n\n      // Try to avoid Projective points, if possible\n      if (points[a].y.cmp(points[b].y) === 0) {\n        comb[1] = points[a].add(points[b]);\n        comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n      } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n        comb[1] = points[a].toJ().mixedAdd(points[b]);\n        comb[2] = points[a].add(points[b].neg());\n      } else {\n        comb[1] = points[a].toJ().mixedAdd(points[b]);\n        comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n      }\n\n      var index = [\n        -3, /* -1 -1 */\n        -1, /* -1 0 */\n        -5, /* -1 1 */\n        -7, /* 0 -1 */\n        0, /* 0 0 */\n        7, /* 0 1 */\n        5, /* 1 -1 */\n        1, /* 1 0 */\n        3  /* 1 1 */\n      ];\n\n      var jsf = getJSF(coeffs[a], coeffs[b]);\n      max = Math.max(jsf[0].length, max);\n      naf[a] = new Array(max);\n      naf[b] = new Array(max);\n      for (var j = 0; j < max; j++) {\n        var ja = jsf[0][j] | 0;\n        var jb = jsf[1][j] | 0;\n\n        naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n        naf[b][j] = 0;\n        wnd[a] = comb;\n      }\n    }\n\n    var acc = this.jpoint(null, null, null);\n    var tmp = this._wnafT4;\n    for (var i = max; i >= 0; i--) {\n      var k = 0;\n\n      while (i >= 0) {\n        var zero = true;\n        for (var j = 0; j < len; j++) {\n          tmp[j] = naf[j][i] | 0;\n          if (tmp[j] !== 0)\n            zero = false;\n        }\n        if (!zero)\n          break;\n        k++;\n        i--;\n      }\n      if (i >= 0)\n        k++;\n      acc = acc.dblp(k);\n      if (i < 0)\n        break;\n\n      for (var j = 0; j < len; j++) {\n        var z = tmp[j];\n        var p;\n        if (z === 0)\n          continue;\n        else if (z > 0)\n          p = wnd[j][(z - 1) >> 1];\n        else if (z < 0)\n          p = wnd[j][(-z - 1) >> 1].neg();\n\n        if (p.type === 'affine')\n          acc = acc.mixedAdd(p);\n        else\n          acc = acc.add(p);\n      }\n    }\n    // Zeroify references\n    for (var i = 0; i < len; i++)\n      wnd[i] = null;\n\n    if (jacobianResult)\n      return acc;\n    else\n      return acc.toP();\n  }\n  \n  decodePoint(bytes, enc) {\n    bytes = utils.toArray(bytes, enc);\n\n    var len = this.p.byteLength();\n\n    // uncompressed, hybrid-odd, hybrid-even\n    if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n        bytes.length - 1 === 2 * len) {\n      if (bytes[0] === 0x06)\n        assert(bytes[bytes.length - 1] % 2 === 0);\n      else if (bytes[0] === 0x07)\n        assert(bytes[bytes.length - 1] % 2 === 1);\n\n      var res =  this.point(bytes.slice(1, 1 + len),\n                            bytes.slice(1 + len, 1 + 2 * len));\n\n      return res;\n    } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n                bytes.length - 1 === len) {\n      return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n    }\n    throw new Error('Unknown point format');\n  };\n\n}\n\nexport class BasePoint {\n  constructor(curve, type) {\n    this.curve = curve;\n    this.type = type;\n    this.precomputed = null;\n  }\n\n  eq(/*other*/) {\n    throw new Error('Not implemented');\n  }\n\n  validate() {\n    return this.curve.validate(this);\n  }\n\n  encodeCompressed(enc) {\n    return this.encode(enc, true);\n  };\n\n  _encode(compact) {\n    var len = this.curve.p.byteLength();\n    var x = this.getX().toArray('be', len);\n\n    if (compact)\n      return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n    return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n  };\n\n  encode(enc, compact) {\n    return utils.encode(this._encode(compact), enc);\n  };\n\n  precompute(power) {\n    if (this.precomputed)\n      return this;\n\n    var precomputed = {\n      doubles: null,\n      naf: null,\n      beta: null\n    };\n    precomputed.naf = this._getNAFPoints(8);\n    precomputed.doubles = this._getDoubles(4, power);\n    precomputed.beta = this._getBeta();\n    this.precomputed = precomputed;\n\n    return this;\n  };\n\n  _hasDoubles(k) {\n    if (!this.precomputed)\n      return false;\n\n    var doubles = this.precomputed.doubles;\n    if (!doubles)\n      return false;\n\n    return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n  };\n\n  _getDoubles(step, power) {\n    if (this.precomputed && this.precomputed.doubles)\n      return this.precomputed.doubles;\n\n    var doubles = [ this ];\n    var acc = this;\n    for (var i = 0; i < power; i += step) {\n      for (var j = 0; j < step; j++)\n        acc = acc.dbl();\n      doubles.push(acc);\n    }\n    return {\n      step: step,\n      points: doubles\n    };\n  };\n\n  _getNAFPoints(wnd) {\n    if (this.precomputed && this.precomputed.naf)\n      return this.precomputed.naf;\n\n    var res = [ this ];\n    var max = (1 << wnd) - 1;\n    var dbl = max === 1 ? null : this.dbl();\n    for (var i = 1; i < max; i++)\n      res[i] = res[i - 1].add(dbl);\n    return {\n      wnd: wnd,\n      points: res\n    };\n  };\n\n  _getBeta() {\n    return null;\n  };\n\n  dblp(k) {\n    var r = this;\n    for (var i = 0; i < k; i++)\n      r = r.dbl();\n    return r;\n  }\n}","import BN from 'bn.js'\nimport Base, { BasePoint } from './base'\nimport { assert } from '../utils'\n\nexport class ShortCurve extends Base {\n  constructor (conf) {\n    super('short', conf)\n\n    this.a = new BN(conf.a, 16).toRed(this.red)\n    this.b = new BN(conf.b, 16).toRed(this.red)\n    this.tinv = this.two.redInvm()\n\n    this.zeroA = this.a.fromRed().cmpn(0) === 0\n    this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0\n\n    // If the curve is endomorphic, precalculate beta and lambda\n    this.endo = this._getEndomorphism(conf)\n    this._endoWnafT1 = new Array(4)\n    this._endoWnafT2 = new Array(4)\n  }\n\n  _getEndomorphism (conf) {\n    // No efficient endomorphism\n    if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return\n\n    // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n    var beta\n    var lambda\n    if (conf.beta) {\n      beta = new BN(conf.beta, 16).toRed(this.red)\n    } else {\n      var betas = this._getEndoRoots(this.p)\n      // Choose the smallest beta\n      beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1]\n      beta = beta.toRed(this.red)\n    }\n    if (conf.lambda) {\n      lambda = new BN(conf.lambda, 16)\n    } else {\n      // Choose the lambda that is matching selected beta\n      var lambdas = this._getEndoRoots(this.n)\n      if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n        lambda = lambdas[0]\n      } else {\n        lambda = lambdas[1]\n        assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0)\n      }\n    }\n\n    // Get basis vectors, used for balanced length-two representation\n    var basis\n    if (conf.basis) {\n      basis = conf.basis.map(function (vec) {\n        return {\n          a: new BN(vec.a, 16),\n          b: new BN(vec.b, 16)\n        }\n      })\n    } else {\n      basis = this._getEndoBasis(lambda)\n    }\n\n    return {\n      beta: beta,\n      lambda: lambda,\n      basis: basis\n    }\n  }\n\n  _getEndoRoots (num) {\n    // Find roots of for x^2 + x + 1 in F\n    // Root = (-1 +- Sqrt(-3)) / 2\n    //\n    var red = num === this.p ? this.red : BN.mont(num)\n    var tinv = new BN(2).toRed(red).redInvm()\n    var ntinv = tinv.redNeg()\n\n    var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv)\n\n    var l1 = ntinv.redAdd(s).fromRed()\n    var l2 = ntinv.redSub(s).fromRed()\n    return [ l1, l2 ]\n  };\n\n  _getEndoBasis (lambda) {\n    // aprxSqrt >= sqrt(this.n)\n    var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2))\n\n    // 3.74\n    // Run EGCD, until r(L + 1) < aprxSqrt\n    var u = lambda\n    var v = this.n.clone()\n    var x1 = new BN(1)\n    var y1 = new BN(0)\n    var x2 = new BN(0)\n    var y2 = new BN(1)\n\n    // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n    var a0\n    var b0\n    // First vector\n    var a1\n    var b1\n    // Second vector\n    var a2\n    var b2\n\n    var prevR\n    var i = 0\n    var r\n    var x\n    while (u.cmpn(0) !== 0) {\n      var q = v.div(u)\n      r = v.sub(q.mul(u))\n      x = x2.sub(q.mul(x1))\n      var y = y2.sub(q.mul(y1))\n\n      if (!a1 && r.cmp(aprxSqrt) < 0) {\n        a0 = prevR.neg()\n        b0 = x1\n        a1 = r.neg()\n        b1 = x\n      } else if (a1 && ++i === 2) {\n        break\n      }\n      prevR = r\n\n      v = u\n      u = r\n      x2 = x1\n      x1 = x\n      y2 = y1\n      y1 = y\n    }\n    a2 = r.neg()\n    b2 = x\n\n    var len1 = a1.sqr().add(b1.sqr())\n    var len2 = a2.sqr().add(b2.sqr())\n    if (len2.cmp(len1) >= 0) {\n      a2 = a0\n      b2 = b0\n    }\n\n    // Normalize signs\n    if (a1.negative) {\n      a1 = a1.neg()\n      b1 = b1.neg()\n    }\n    if (a2.negative) {\n      a2 = a2.neg()\n      b2 = b2.neg()\n    }\n\n    return [\n      { a: a1, b: b1 },\n      { a: a2, b: b2 }\n    ]\n  }\n\n  _endoSplit (k) {\n    var basis = this.endo.basis\n    var v1 = basis[0]\n    var v2 = basis[1]\n\n    var c1 = v2.b.mul(k).divRound(this.n)\n    var c2 = v1.b.neg().mul(k).divRound(this.n)\n\n    var p1 = c1.mul(v1.a)\n    var p2 = c2.mul(v2.a)\n    var q1 = c1.mul(v1.b)\n    var q2 = c2.mul(v2.b)\n\n    // Calculate answer\n    var k1 = k.sub(p1).sub(p2)\n    var k2 = q1.add(q2).neg()\n    return { k1: k1, k2: k2 }\n  }\n\n  pointFromX (x, odd) {\n    x = new BN(x, 16)\n    if (!x.red)\n      {x = x.toRed(this.red);}\n\n    var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b)\n    var y = y2.redSqrt()\n    if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n      {throw new Error('invalid point');}\n\n    // XXX Is there any way to tell if the number is odd without converting it\n    // to non-red form?\n    var isOdd = y.fromRed().isOdd()\n    if (odd && !isOdd || !odd && isOdd)\n      {y = y.redNeg();}\n\n    return this.point(x, y)\n  }\n\n  validate (point) {\n    if (point.inf)\n      {return true;}\n\n    var x = point.x\n    var y = point.y\n\n    var ax = this.a.redMul(x)\n    var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b)\n    return y.redSqr().redISub(rhs).cmpn(0) === 0\n  }\n\n  _endoWnafMulAdd (points, coeffs, jacobianResult) {\n    var npoints = this._endoWnafT1\n    var ncoeffs = this._endoWnafT2\n    for (var i = 0; i < points.length; i++) {\n      var split = this._endoSplit(coeffs[i])\n      var p = points[i]\n      var beta = p._getBeta()\n\n      if (split.k1.negative) {\n        split.k1.ineg()\n        p = p.neg(true)\n      }\n      if (split.k2.negative) {\n        split.k2.ineg()\n        beta = beta.neg(true)\n      }\n\n      npoints[i * 2] = p\n      npoints[i * 2 + 1] = beta\n      ncoeffs[i * 2] = split.k1\n      ncoeffs[i * 2 + 1] = split.k2\n    }\n    var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult)\n\n    // Clean-up references to points and coefficients\n    for (var j = 0; j < i * 2; j++) {\n      npoints[j] = null\n      ncoeffs[j] = null\n    }\n    return res\n  }\n\n  point (x, y, isRed) {\n    return new Point(this, x, y, isRed)\n  };\n\n  pointFromJSON (obj, red) {\n    return Point.fromJSON(this, obj, red)\n  }\n\n  jpoint (x, y, z) {\n    return new JPoint(this, x, y, z)\n  };\n}\n\nexport class Point extends BasePoint {\n  constructor (curve, x, y, isRed) {\n    super(curve, 'affine')\n    if (x === null && y === null) {\n      this.x = null\n      this.y = null\n      this.inf = true\n    } else {\n      this.x = new BN(x, 16)\n      this.y = new BN(y, 16)\n      // Force redgomery representation when loading from JSON\n      if (isRed) {\n        this.x.forceRed(this.curve.red)\n        this.y.forceRed(this.curve.red)\n      }\n      if (!this.x.red)\n        {this.x = this.x.toRed(this.curve.red);}\n      if (!this.y.red)\n        {this.y = this.y.toRed(this.curve.red);}\n      this.inf = false\n    }\n  }\n\n  _getBeta () {\n    if (!this.curve.endo)\n      {return;}\n\n    var pre = this.precomputed\n    if (pre && pre.beta)\n      {return pre.beta;}\n\n    var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y)\n    if (pre) {\n      var curve = this.curve\n      var endoMul = function (p) {\n        return curve.point(p.x.redMul(curve.endo.beta), p.y)\n      };\n      pre.beta = beta\n      beta.precomputed = {\n        beta: null,\n        naf: pre.naf && {\n          wnd: pre.naf.wnd,\n          points: pre.naf.points.map(endoMul)\n        },\n        doubles: pre.doubles && {\n          step: pre.doubles.step,\n          points: pre.doubles.points.map(endoMul)\n        }\n      }\n    }\n    return beta\n  };\n\n  toJSON () {\n    if (!this.precomputed)\n      {return [ this.x, this.y ];}\n\n    return [ this.x, this.y, this.precomputed && {\n      doubles: this.precomputed.doubles && {\n        step: this.precomputed.doubles.step,\n        points: this.precomputed.doubles.points.slice(1)\n      },\n      naf: this.precomputed.naf && {\n        wnd: this.precomputed.naf.wnd,\n        points: this.precomputed.naf.points.slice(1)\n      }\n    } ]\n  };\n\n  fromJSON (curve, obj, red) {\n    if (typeof obj === 'string')\n      {obj = JSON.parse(obj);}\n    var res = curve.point(obj[0], obj[1], red)\n    if (!obj[2])\n      {return res;}\n\n    function obj2point (obj) {\n      return curve.point(obj[0], obj[1], red)\n    }\n\n    var pre = obj[2]\n    res.precomputed = {\n      beta: null,\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: [ res ].concat(pre.doubles.points.map(obj2point))\n      },\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: [ res ].concat(pre.naf.points.map(obj2point))\n      }\n    }\n    return res\n  };\n\n  inspect () {\n    if (this.isInfinity())\n      {return '<EC Point Infinity>';}\n    return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n        ' y: ' + this.y.fromRed().toString(16, 2) + '>'\n  };\n\n  isInfinity () {\n    return this.inf\n  };\n\n  add (p) {\n    // O + P = P\n    if (this.inf)\n      {return p;}\n\n    // P + O = P\n    if (p.inf)\n      {return this;}\n\n    // P + P = 2P\n    if (this.eq(p))\n      {return this.dbl();}\n\n    // P + (-P) = O\n    if (this.neg().eq(p))\n      {return this.curve.point(null, null);}\n\n    // P + Q = O\n    if (this.x.cmp(p.x) === 0)\n      {return this.curve.point(null, null);}\n\n    var c = this.y.redSub(p.y)\n    if (c.cmpn(0) !== 0)\n      {c = c.redMul(this.x.redSub(p.x).redInvm());}\n    var nx = c.redSqr().redISub(this.x).redISub(p.x)\n    var ny = c.redMul(this.x.redSub(nx)).redISub(this.y)\n    return this.curve.point(nx, ny)\n  };\n\n  dbl () {\n    if (this.inf)\n      {return this;}\n\n    // 2P = O\n    var ys1 = this.y.redAdd(this.y)\n    if (ys1.cmpn(0) === 0)\n      {return this.curve.point(null, null);}\n\n    var a = this.curve.a\n\n    var x2 = this.x.redSqr()\n    var dyinv = ys1.redInvm()\n    var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv)\n\n    var nx = c.redSqr().redISub(this.x.redAdd(this.x))\n    var ny = c.redMul(this.x.redSub(nx)).redISub(this.y)\n    return this.curve.point(nx, ny)\n  };\n\n  getX () {\n    return this.x.fromRed()\n  };\n\n  getY () {\n    return this.y.fromRed()\n  };\n\n  mul (k) {\n    k = new BN(k, 16)\n\n    if (this._hasDoubles(k))\n      {return this.curve._fixedNafMul(this, k);}\n    else if (this.curve.endo)\n      {return this.curve._endoWnafMulAdd([ this ], [ k ]);}\n    else\n      {return this.curve._wnafMul(this, k);}\n  };\n\n  mulAdd (k1, p2, k2) {\n    var points = [ this, p2 ]\n    var coeffs = [ k1, k2 ]\n    if (this.curve.endo)\n      {return this.curve._endoWnafMulAdd(points, coeffs);}\n    else\n      {return this.curve._wnafMulAdd(1, points, coeffs, 2);}\n  };\n\n  jmulAdd (k1, p2, k2) {\n    var points = [ this, p2 ]\n    var coeffs = [ k1, k2 ]\n    if (this.curve.endo)\n      {return this.curve._endoWnafMulAdd(points, coeffs, true);}\n    else\n      {return this.curve._wnafMulAdd(1, points, coeffs, 2, true);}\n  };\n\n  eq (p) {\n    return this === p ||\n          this.inf === p.inf &&\n              (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0)\n  };\n\n  neg (_precompute) {\n    if (this.inf)\n      {return this;}\n\n    var res = this.curve.point(this.x, this.y.redNeg())\n    if (_precompute && this.precomputed) {\n      var pre = this.precomputed\n      var negate = function (p) {\n        return p.neg()\n      };\n      res.precomputed = {\n        naf: pre.naf && {\n          wnd: pre.naf.wnd,\n          points: pre.naf.points.map(negate)\n        },\n        doubles: pre.doubles && {\n          step: pre.doubles.step,\n          points: pre.doubles.points.map(negate)\n        }\n      }\n    }\n    return res\n  };\n\n  toJ () {\n    if (this.inf)\n      {return this.curve.jpoint(null, null, null);}\n\n    var res = this.curve.jpoint(this.x, this.y, this.curve.one)\n    return res\n  };\n}\nexport class JPoint extends BasePoint {\n  constructor (curve, x, y, z) {\n    super(curve, 'jacobian')\n    if (x === null && y === null && z === null) {\n      this.x = this.curve.one\n      this.y = this.curve.one\n      this.z = new BN(0)\n    } else {\n      this.x = new BN(x, 16)\n      this.y = new BN(y, 16)\n      this.z = new BN(z, 16)\n    }\n    if (!this.x.red)\n      {this.x = this.x.toRed(this.curve.red);}\n    if (!this.y.red)\n      {this.y = this.y.toRed(this.curve.red);}\n    if (!this.z.red)\n      {this.z = this.z.toRed(this.curve.red);}\n\n    this.zOne = this.z === this.curve.one\n  }\n\n  toP () {\n    if (this.isInfinity())\n      {return this.curve.point(null, null);}\n\n    var zinv = this.z.redInvm()\n    var zinv2 = zinv.redSqr()\n    var ax = this.x.redMul(zinv2)\n    var ay = this.y.redMul(zinv2).redMul(zinv)\n\n    return this.curve.point(ax, ay)\n  };\n\n  neg () {\n    return this.curve.jpoint(this.x, this.y.redNeg(), this.z)\n  };\n\n  add (p) {\n    // O + P = P\n    if (this.isInfinity())\n      {return p;}\n\n    // P + O = P\n    if (p.isInfinity())\n      {return this;}\n\n    // 12M + 4S + 7A\n    var pz2 = p.z.redSqr()\n    var z2 = this.z.redSqr()\n    var u1 = this.x.redMul(pz2)\n    var u2 = p.x.redMul(z2)\n    var s1 = this.y.redMul(pz2.redMul(p.z))\n    var s2 = p.y.redMul(z2.redMul(this.z))\n\n    var h = u1.redSub(u2)\n    var r = s1.redSub(s2)\n    if (h.cmpn(0) === 0) {\n      if (r.cmpn(0) !== 0)\n        {return this.curve.jpoint(null, null, null);}\n      else\n        {return this.dbl();}\n    }\n\n    var h2 = h.redSqr()\n    var h3 = h2.redMul(h)\n    var v = u1.redMul(h2)\n\n    var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v)\n    var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3))\n    var nz = this.z.redMul(p.z).redMul(h)\n\n    return this.curve.jpoint(nx, ny, nz)\n  };\n\n  mixedAdd (p) {\n    // O + P = P\n    if (this.isInfinity())\n      {return p.toJ();}\n\n    // P + O = P\n    if (p.isInfinity())\n      {return this;}\n\n    // 8M + 3S + 7A\n    var z2 = this.z.redSqr()\n    var u1 = this.x\n    var u2 = p.x.redMul(z2)\n    var s1 = this.y\n    var s2 = p.y.redMul(z2).redMul(this.z)\n\n    var h = u1.redSub(u2)\n    var r = s1.redSub(s2)\n    if (h.cmpn(0) === 0) {\n      if (r.cmpn(0) !== 0)\n        {return this.curve.jpoint(null, null, null);}\n      else\n        {return this.dbl();}\n    }\n\n    var h2 = h.redSqr()\n    var h3 = h2.redMul(h)\n    var v = u1.redMul(h2)\n\n    var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v)\n    var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3))\n    var nz = this.z.redMul(h)\n\n    return this.curve.jpoint(nx, ny, nz)\n  };\n\n  dblp (pow) {\n    if (pow === 0)\n      {return this;}\n    if (this.isInfinity())\n      {return this;}\n    if (!pow)\n      {return this.dbl();}\n\n    if (this.curve.zeroA || this.curve.threeA) {\n      var r = this\n      for (var i = 0; i < pow; i++)\n        {r = r.dbl();}\n      return r\n    }\n\n    // 1M + 2S + 1A + N * (4S + 5M + 8A)\n    // N = 1 => 6M + 6S + 9A\n    var a = this.curve.a\n    var tinv = this.curve.tinv\n\n    var jx = this.x\n    var jy = this.y\n    var jz = this.z\n    var jz4 = jz.redSqr().redSqr()\n\n    // Reuse results\n    var jyd = jy.redAdd(jy)\n    for (var i = 0; i < pow; i++) {\n      var jx2 = jx.redSqr()\n      var jyd2 = jyd.redSqr()\n      var jyd4 = jyd2.redSqr()\n      var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4))\n\n      var t1 = jx.redMul(jyd2)\n      var nx = c.redSqr().redISub(t1.redAdd(t1))\n      var t2 = t1.redISub(nx)\n      var dny = c.redMul(t2)\n      dny = dny.redIAdd(dny).redISub(jyd4)\n      var nz = jyd.redMul(jz)\n      if (i + 1 < pow)\n        {jz4 = jz4.redMul(jyd4);}\n\n      jx = nx\n      jz = nz\n      jyd = dny\n    }\n\n    return this.curve.jpoint(jx, jyd.redMul(tinv), jz)\n  };\n\n  dbl () {\n    if (this.isInfinity())\n      {return this;}\n\n    if (this.curve.zeroA)\n      {return this._zeroDbl();}\n    else if (this.curve.threeA)\n      {return this._threeDbl();}\n    else\n      {return this._dbl();}\n  };\n\n  _zeroDbl () {\n    var nx\n    var ny\n    var nz\n    // Z = 1\n    if (this.zOne) {\n      // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n      //     #doubling-mdbl-2007-bl\n      // 1M + 5S + 14A\n\n      // XX = X1^2\n      var xx = this.x.redSqr()\n      // YY = Y1^2\n      var yy = this.y.redSqr()\n      // YYYY = YY^2\n      var yyyy = yy.redSqr()\n      // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n      var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy)\n      s = s.redIAdd(s)\n      // M = 3 * XX + a; a = 0\n      var m = xx.redAdd(xx).redIAdd(xx)\n      // T = M ^ 2 - 2*S\n      var t = m.redSqr().redISub(s).redISub(s)\n\n      // 8 * YYYY\n      var yyyy8 = yyyy.redIAdd(yyyy)\n      yyyy8 = yyyy8.redIAdd(yyyy8)\n      yyyy8 = yyyy8.redIAdd(yyyy8)\n\n      // X3 = T\n      nx = t\n      // Y3 = M * (S - T) - 8 * YYYY\n      ny = m.redMul(s.redISub(t)).redISub(yyyy8)\n      // Z3 = 2*Y1\n      nz = this.y.redAdd(this.y)\n    } else {\n      // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n      //     #doubling-dbl-2009-l\n      // 2M + 5S + 13A\n\n      // A = X1^2\n      var a = this.x.redSqr()\n      // B = Y1^2\n      var b = this.y.redSqr()\n      // C = B^2\n      var c = b.redSqr()\n      // D = 2 * ((X1 + B)^2 - A - C)\n      var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c)\n      d = d.redIAdd(d)\n      // E = 3 * A\n      var e = a.redAdd(a).redIAdd(a)\n      // F = E^2\n      var f = e.redSqr()\n\n      // 8 * C\n      var c8 = c.redIAdd(c)\n      c8 = c8.redIAdd(c8)\n      c8 = c8.redIAdd(c8)\n\n      // X3 = F - 2 * D\n      nx = f.redISub(d).redISub(d)\n      // Y3 = E * (D - X3) - 8 * C\n      ny = e.redMul(d.redISub(nx)).redISub(c8)\n      // Z3 = 2 * Y1 * Z1\n      nz = this.y.redMul(this.z)\n      nz = nz.redIAdd(nz)\n    }\n\n    return this.curve.jpoint(nx, ny, nz)\n  };\n\n  _threeDbl () {\n    var nx\n    var ny\n    var nz\n    // Z = 1\n    if (this.zOne) {\n      // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n      //     #doubling-mdbl-2007-bl\n      // 1M + 5S + 15A\n\n      // XX = X1^2\n      var xx = this.x.redSqr()\n      // YY = Y1^2\n      var yy = this.y.redSqr()\n      // YYYY = YY^2\n      var yyyy = yy.redSqr()\n      // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n      var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy)\n      s = s.redIAdd(s)\n      // M = 3 * XX + a\n      var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a)\n      // T = M^2 - 2 * S\n      var t = m.redSqr().redISub(s).redISub(s)\n      // X3 = T\n      nx = t\n      // Y3 = M * (S - T) - 8 * YYYY\n      var yyyy8 = yyyy.redIAdd(yyyy)\n      yyyy8 = yyyy8.redIAdd(yyyy8)\n      yyyy8 = yyyy8.redIAdd(yyyy8)\n      ny = m.redMul(s.redISub(t)).redISub(yyyy8)\n      // Z3 = 2 * Y1\n      nz = this.y.redAdd(this.y)\n    } else {\n      // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n      // 3M + 5S\n\n      // delta = Z1^2\n      var delta = this.z.redSqr()\n      // gamma = Y1^2\n      var gamma = this.y.redSqr()\n      // beta = X1 * gamma\n      var beta = this.x.redMul(gamma)\n      // alpha = 3 * (X1 - delta) * (X1 + delta)\n      var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta))\n      alpha = alpha.redAdd(alpha).redIAdd(alpha)\n      // X3 = alpha^2 - 8 * beta\n      var beta4 = beta.redIAdd(beta)\n      beta4 = beta4.redIAdd(beta4)\n      var beta8 = beta4.redAdd(beta4)\n      nx = alpha.redSqr().redISub(beta8)\n      // Z3 = (Y1 + Z1)^2 - gamma - delta\n      nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta)\n      // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n      var ggamma8 = gamma.redSqr()\n      ggamma8 = ggamma8.redIAdd(ggamma8)\n      ggamma8 = ggamma8.redIAdd(ggamma8)\n      ggamma8 = ggamma8.redIAdd(ggamma8)\n      ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8)\n    }\n\n    return this.curve.jpoint(nx, ny, nz)\n  };\n\n  _dbl () {\n    var a = this.curve.a\n\n    // 4M + 6S + 10A\n    var jx = this.x\n    var jy = this.y\n    var jz = this.z\n    var jz4 = jz.redSqr().redSqr()\n\n    var jx2 = jx.redSqr()\n    var jy2 = jy.redSqr()\n\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4))\n\n    var jxd4 = jx.redAdd(jx)\n    jxd4 = jxd4.redIAdd(jxd4)\n    var t1 = jxd4.redMul(jy2)\n    var nx = c.redSqr().redISub(t1.redAdd(t1))\n    var t2 = t1.redISub(nx)\n\n    var jyd8 = jy2.redSqr()\n    jyd8 = jyd8.redIAdd(jyd8)\n    jyd8 = jyd8.redIAdd(jyd8)\n    jyd8 = jyd8.redIAdd(jyd8)\n    var ny = c.redMul(t2).redISub(jyd8)\n    var nz = jy.redAdd(jy).redMul(jz)\n\n    return this.curve.jpoint(nx, ny, nz)\n  };\n\n  trpl () {\n    if (!this.curve.zeroA)\n      {return this.dbl().add(this);}\n\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n    // 5M + 10S + ...\n\n    // XX = X1^2\n    var xx = this.x.redSqr()\n    // YY = Y1^2\n    var yy = this.y.redSqr()\n    // ZZ = Z1^2\n    var zz = this.z.redSqr()\n    // YYYY = YY^2\n    var yyyy = yy.redSqr()\n    // M = 3 * XX + a * ZZ2; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx)\n    // MM = M^2\n    var mm = m.redSqr()\n    // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n    var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy)\n    e = e.redIAdd(e)\n    e = e.redAdd(e).redIAdd(e)\n    e = e.redISub(mm)\n    // EE = E^2\n    var ee = e.redSqr()\n    // T = 16*YYYY\n    var t = yyyy.redIAdd(yyyy)\n    t = t.redIAdd(t)\n    t = t.redIAdd(t)\n    t = t.redIAdd(t)\n    // U = (M + E)^2 - MM - EE - T\n    var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t)\n    // X3 = 4 * (X1 * EE - 4 * YY * U)\n    var yyu4 = yy.redMul(u)\n    yyu4 = yyu4.redIAdd(yyu4)\n    yyu4 = yyu4.redIAdd(yyu4)\n    var nx = this.x.redMul(ee).redISub(yyu4)\n    nx = nx.redIAdd(nx)\n    nx = nx.redIAdd(nx)\n    // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n    var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)))\n    ny = ny.redIAdd(ny)\n    ny = ny.redIAdd(ny)\n    ny = ny.redIAdd(ny)\n    // Z3 = (Z1 + E)^2 - ZZ - EE\n    var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee)\n\n    return this.curve.jpoint(nx, ny, nz)\n  };\n\n  mul (k, kbase) {\n    k = new BN(k, kbase)\n\n    return this.curve._wnafMul(this, k)\n  };\n\n  eq (p) {\n    if (p.type === 'affine')\n      {return this.eq(p.toJ());}\n\n    if (this === p)\n      {return true;}\n\n    // x1 * z2^2 == x2 * z1^2\n    var z2 = this.z.redSqr()\n    var pz2 = p.z.redSqr()\n    if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n      {return false;}\n\n    // y1 * z2^3 == y2 * z1^3\n    var z3 = z2.redMul(this.z)\n    var pz3 = pz2.redMul(p.z)\n    return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0\n  };\n\n  eqXToP (x) {\n    var zs = this.z.redSqr()\n    var rx = x.toRed(this.curve.red).redMul(zs)\n    if (this.x.cmp(rx) === 0)\n      {return true;}\n\n    var xc = x.clone()\n    var t = this.curve.redN.redMul(zs)\n    for (;;) {\n      xc.iadd(this.curve.n)\n      if (xc.cmp(this.curve.p) >= 0)\n        {return false;}\n\n      rx.redIAdd(t)\n      if (this.x.cmp(rx) === 0)\n        {return true;}\n    }\n  };\n\n  inspect () {\n    if (this.isInfinity())\n      {return '<EC JPoint Infinity>';}\n    return '<EC JPoint x: ' + this.x.toString(16, 2) +\n        ' y: ' + this.y.toString(16, 2) +\n        ' z: ' + this.z.toString(16, 2) + '>'\n  };\n\n  isInfinity () {\n    // XXX This code assumes that zero is always zero in red\n    return this.z.cmpn(0) === 0\n  }\n}\n","import pre from './precomputed/secp256k1'\nimport { assert } from './utils'\nimport { sha256 } from 'hash.js'\nimport { ShortCurve } from './curve/short'\n\nexport class PresetCurve {\n  constructor (options) {\n    this.curve = new ShortCurve(options)\n    this.g = this.curve.g;\n    this.n = this.curve.n;\n    this.hash = options.hash;\n\n    assert(this.g.validate(), 'Invalid curve');\n    assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n  }\n}\nexport const secp256k1 = new PresetCurve({\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n})\n","import BN from 'bn.js'\nimport HmacDRBG from 'hmac-drbg'\nimport { assert } from '../utils'\nimport KeyPair from './key'\nimport Signature from './signature'\nimport { secp256k1 } from '../curves'\nimport rand from 'brorand'\n\nexport default class EC {\n  constructor () {\n    const options = { curve: secp256k1 }\n\n    this.curve = secp256k1.curve\n    this.n = this.curve.n\n    this.nh = this.n.ushrn(1)\n    this.g = this.curve.g\n\n    // Point on curve\n    this.g = secp256k1.g\n    this.g.precompute(secp256k1.n.bitLength() + 1)\n\n    // Hash for function for DRBG\n    this.hash = secp256k1.hash\n  }\n\n  keyPair (options) {\n    return new KeyPair(this, options)\n  }\n\n  keyFromPrivate (priv, enc) {\n    return KeyPair.fromPrivate(this, priv, enc)\n  }\n\n  keyFromPublic (pub, enc) {\n    return KeyPair.fromPublic(this, pub, enc)\n  }\n\n  genKeyPair (options) {\n    if (!options) { options = {}}\n\n    // Instantiate Hmac_DRBG\n    var drbg = new HmacDRBG({\n      hash: this.hash,\n      pers: options.pers,\n      persEnc: options.persEnc || 'utf8',\n      entropy: options.entropy || rand(this.hash.hmacStrength),\n      entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n      nonce: this.n.toArray()\n    })\n\n    var bytes = this.n.byteLength()\n    var ns2 = this.n.sub(new BN(2))\n    do {\n      var priv = new BN(drbg.generate(bytes))\n      if (priv.cmp(ns2) > 0) continue\n\n      priv.iaddn(1)\n      return this.keyFromPrivate(priv)\n    } while (true)\n  }\n\n  truncateToN (msg, truncOnly) {\n    var delta = msg.byteLength() * 8 - this.n.bitLength()\n    if (delta > 0) {\n      msg = msg.ushrn(delta)\n    }\n    if (!truncOnly && msg.cmp(this.n) >= 0) {\n      return msg.sub(this.n)\n    } else {\n      return msg\n    }\n  }\n\n  sign (msg, key, enc, options) {\n    if (typeof enc === 'object') {\n      options = enc\n      enc = null\n    }\n    if (!options) {\n      options = {}\n    }\n\n    key = this.keyFromPrivate(key, enc)\n    msg = this._truncateToN(new BN(msg, 16))\n\n    // Zero-extend key to provide enough entropy\n    var bytes = this.n.byteLength()\n    var bkey = key.getPrivate().toArray('be', bytes)\n\n    // Zero-extend nonce to have the same byte size as N\n    var nonce = msg.toArray('be', bytes)\n\n    // Instantiate Hmac_DRBG\n    var drbg = new HmacDRBG({\n      hash: this.hash,\n      entropy: bkey,\n      nonce: nonce,\n      pers: options.pers,\n      persEnc: options.persEnc || 'utf8'\n    })\n\n    // Number of bytes to generate\n    var ns1 = this.n.sub(new BN(1))\n\n    for (var iter = 0; true; iter++) {\n      var k = options.k\n        ? options.k(iter)\n        : new BN(drbg.generate(this.n.byteLength()))\n      k = this._truncateToN(k, true)\n      if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue\n\n      var kp = this.g.mul(k)\n      if (kp.isInfinity()) continue\n\n      var kpX = kp.getX()\n      var r = kpX.umod(this.n)\n      if (r.cmpn(0) === 0) continue\n\n      var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg))\n      s = s.umod(this.n)\n      if (s.cmpn(0) === 0) continue\n\n      var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                          (kpX.cmp(r) !== 0 ? 2 : 0)\n\n      // Use complement of `s`, if it is > `n / 2`\n      if (options.canonical && s.cmp(this.nh) > 0) {\n        s = this.n.sub(s)\n        recoveryParam ^= 1\n      }\n\n      return new Signature({ r: r, s: s, recoveryParam: recoveryParam })\n    }\n  };\n\n  verify (msg, signature, key, enc) {\n    msg = this._truncateToN(new BN(msg, 16))\n    key = this.keyFromPublic(key, enc)\n    signature = new Signature(signature, 'hex')\n\n    // Perform primitive values validation\n    var r = signature.r\n    var s = signature.s\n    if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false\n    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false\n\n    // Validate signature\n    var sinv = s.invm(this.n)\n    var u1 = sinv.mul(msg).umod(this.n)\n    var u2 = sinv.mul(r).umod(this.n)\n\n    if (!this.curve._maxwellTrick) {\n      var p = this.g.mulAdd(u1, key.getPublic(), u2)\n      if (p.isInfinity()) return false\n\n      return p.getX().umod(this.n).cmp(r) === 0\n    }\n\n    // NOTE: Greg Maxwell's trick, inspired by:\n    // https://git.io/vad3K\n\n    var p = this.g.jmulAdd(u1, key.getPublic(), u2)\n    if (p.isInfinity()) return false\n\n    // Compare `p.x` of Jacobian point with `r`,\n    // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n    // inverse of `p.z^2`\n    return p.eqXToP(r)\n  }\n\n  recoverPubKey (msg, signature, j, enc) {\n    assert((3 & j) === j, 'The recovery param is more than two bits')\n    signature = new Signature(signature, enc)\n\n    var n = this.n\n    var e = new BN(msg)\n    var r = signature.r\n    var s = signature.s\n\n    // A set LSB signifies that the y-coordinate is odd\n    var isYOdd = j & 1\n    var isSecondKey = j >> 1\n    if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate')\n\n    // 1.1. Let x = r + jn.\n    if (isSecondKey) {\n      r = this.curve.pointFromX(r.add(this.curve.n), isYOdd)\n    } else {\n      r = this.curve.pointFromX(r, isYOdd)\n    }\n\n    var rInv = signature.r.invm(n)\n    var s1 = n.sub(e).mul(rInv).umod(n)\n    var s2 = s.mul(rInv).umod(n)\n\n    // 1.6.1 Compute Q = r^-1 (sR -  eG)\n    //               Q = r^-1 (sR + -eG)\n    return this.g.mulAdd(s1, r, s2)\n  }\n\n  getKeyRecoveryParam (e, signature, Q, enc) {\n    signature = new Signature(signature, enc)\n    if (signature.recoveryParam !== null) {\n      return signature.recoveryParam\n    }\n\n    for (var i = 0; i < 4; i++) {\n      var Qprime\n      try {\n        Qprime = this.recoverPubKey(e, signature, i)\n      } catch (e) {\n        continue\n      }\n\n      if (Qprime.eq(Q)) return i\n    }\n    throw new Error('Unable to find valid recovery factor')\n  }\n}\n"],"names":["const","assert","minAssert","toArray","minUtils","encode","getNAF","num","w","naf","ws","k","clone","cmpn","z","isOdd","mod","andln","isubn","push","shift","i","iushrn","getJSF","k1","k2","jsf","d1","d2","u1","u2","m8","m14","m24","KeyPair","constructor","ec","options","priv","pub","this","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","enc","fromPrivate","validate","getPublic","isInfinity","mul","curve","n","compact","g","getPrivate","toString","key","BN","umod","x","y","type","point","decodePoint","derive","getX","sign","msg","verify","signature","inspect","Signature","_importDER","r","s","recoveryParam","undefined","data","p","Position","place","getLength","length","rlen","slice","slen","toDER","concat","rmPadding","arr","backHalf","res","buf","initial","octetLen","val","off","len","constructLength","octets","Math","log","LN2","BaseCurve","conf","red","prime","mont","zero","toRed","one","two","pointFromJSON","gRed","_wnafT1","Array","_wnafT2","_wnafT3","_wnafT4","adjustCount","div","redN","_maxwellTrick","Error","_fixedNafMul","precomputed","doubles","_getDoubles","I","step","repr","j","nafW","a","jpoint","b","mixedAdd","points","neg","add","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","acc","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","max","comb","cmp","toJ","redNeg","index","tmp","bytes","utils","byteLength","pointFromX","BasePoint","eq","encodeCompressed","_encode","getY","isEven","precompute","power","beta","_getBeta","_hasDoubles","ceil","bitLength","dbl","ShortCurve","tinv","redInvm","zeroA","fromRed","threeA","sub","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","modn","lambda","betas","_getEndoRoots","lambdas","redMul","basis","map","vec","_getEndoBasis","ntinv","redSqrt","redAdd","redSub","a0","b0","a1","b1","a2","b2","prevR","aprxSqrt","ushrn","floor","u","v","x1","y1","x2","y2","q","len1","sqr","negative","_endoSplit","v1","v2","c1","divRound","c2","p1","p2","q1","q2","odd","redSqr","redIAdd","inf","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","split","ineg","isRed","Point","obj","fromJSON","JPoint","Base","forceRed","pre","endoMul","toJSON","JSON","parse","obj2point","c","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zOne","zinv","zinv2","ay","pz2","z2","s1","s2","h","h2","h3","nz","pow","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","m","t","yyyy8","d","e","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","secp256k1","hash","sha256","EC","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","HmacDRBG","pers","persEnc","entropy","rand","hmacStrength","entropyEnc","nonce","ns2","generate","iaddn","truncateToN","truncOnly","_truncateToN","bkey","ns1","iter","kp","kpX","invm","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime"],"mappings":"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,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,kEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,sEAINlI,IAAK,CACHyI,IAAK,EACLP,OAAQ,CACN,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,iEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,m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"}